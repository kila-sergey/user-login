{"version":3,"sources":["api/index.js","components/Buttons/ExitButton/ExitButton.module.scss","components/Header/Header.module.scss","pages/index.jsx","constants/router-constants.js","components/Buttons/ExitButton/index.jsx","components/Header/index.jsx","app.jsx","index.jsx","contexts/auth.js"],"names":["Api","this","token","expiresAt","refreshToken","tokenType","data","JSON","parse","localStorage","getItem","Date","method","endpoint","body","authRetry","fetch","headers","Authorization","undefined","stringify","response","json","res","ok","status","_getAccessToken","_fetch","Error","message","email","password","clientId","accessToken","setItem","removeItem","module","exports","LoginPage","lazy","ProfilePage","Pages","loggedIn","key","fallback","path","exact","component","to","memo","name","props","className","styles","button","Header","logout","useContext","AuthContext","header","onClick","App","ReactDOM","render","StrictMode","document","getElementById","createContext","AuthProvider","Consumer","children","useState","api","isLoggedIn","setLoggedIn","login","useCallback","a","contextValue","useMemo","Provider","value"],"mappings":"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","file":"static/js/main.09fa6153.chunk.js","sourcesContent":["const API_BASE = 'https://tager.dev.ozitag.com/api/';\nconst API_STORAGE_NAME = 'ozitag-user';\n\nclass Api {\n  constructor() {\n    this.token = null;\n    this.expiresAt = null;\n    this.refreshToken = null;\n    this.tokenType = null;\n\n    try {\n      const data = JSON.parse(localStorage.getItem(API_STORAGE_NAME));\n\n      if (data.expiresAt && new Date(data.expiresAt) > new Date()) {\n        this.token = data.token;\n        this.expiresAt = data.expiresAt;\n        this.refreshToken = data.refreshToken;\n        this.tokenType = data.tokenType;\n      }\n    } catch {\n      // empty\n    }\n  }\n\n  async _fetch(method, endpoint, body, authRetry) {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      method,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.token ? `${this.tokenType} ${this.token}` : undefined,\n        // Only for production\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': 'true',\n        'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS,POST,PUT',\n        'Access-Control-Allow-Headers': 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n      },\n      body: body ? JSON.stringify(body) : undefined,\n    });\n    let res;\n\n    try {\n      res = await response.json();\n    } catch {\n      // empty\n    }\n\n    if (!response.ok) {\n      // Condition for checking if token is expired\n      if (authRetry && response.status === 401) {\n        await this._getAccessToken();\n        return this._fetch(method, endpoint, body);\n      }\n\n      throw new Error(res?.message ?? 'Something went wrong');\n    }\n\n    return res.data;\n  }\n\n  isLoggedIn() {\n    return !!this.token && (new Date(this.expiresAt) > new Date());\n  }\n\n  async login(email, password) {\n    const res = await this._fetch('POST', 'auth/user', {\n      email,\n      password,\n      clientId: 1,\n    });\n\n    this.token = res.accessToken;\n    this.expiresAt = res.expiresAt;\n    this.refreshToken = res.refreshToken;\n    this.tokenType = res.tokenType;\n\n    localStorage.setItem(API_STORAGE_NAME, JSON.stringify({\n      token: res.accessToken,\n      expiresAt: res.expiresAt,\n      refreshToken: res.refreshToken,\n      tokenType: res.tokenType,\n    }));\n  }\n\n  async logout() {\n    await this._fetch('POST', 'user/profile/logout');\n\n    this.token = null;\n    this.expiresAt = null;\n    this.refreshToken = null;\n    this.tokenType = null;\n\n    localStorage.removeItem(API_STORAGE_NAME);\n  }\n\n  // Method to get new token (only for demostrating because of unreal endpoint)\n  async _getAccessToken() {\n    const res = await this._fetch('POST', 'user/profile/token', {\n      refreshToken: this.refreshToken,\n    });\n\n    this.token = res.accessToken;\n    this.expiresAt = res.expiresAt;\n\n    localStorage.setItem(API_STORAGE_NAME, JSON.stringify({\n      token: res.accessToken,\n      expiresAt: res.expiresAt,\n      refreshToken: this.refreshToken,\n    }));\n  }\n\n  getProfileInfo() {\n    return this._fetch('GET', 'user/profile', null, true);\n  }\n}\n\nexport default new Api();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ExitButton_button__2SJm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3dtee\"};","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { LOGIN_PATH, PROFILE_PATH } from '../constants/router-constants';\n\nconst LoginPage = lazy(() => import('./LoginPage'));\nconst ProfilePage = lazy(() => import('./ProfilePage'));\n\nconst Pages = ({ loggedIn }) => (\n  <Suspense key={loggedIn} fallback={<div>Loading...</div>}>\n    <Switch>\n      {!loggedIn && (\n      <>\n        <Route path={LOGIN_PATH} exact component={LoginPage} />\n        <Redirect to={LOGIN_PATH} />\n\n      </>\n      )}\n\n      {loggedIn && (\n        <>\n          <Route path={PROFILE_PATH} exact component={ProfilePage} />\n          <Redirect to={PROFILE_PATH} />\n        </>\n      )}\n\n    </Switch>\n  </Suspense>\n);\n\nPages.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n};\n\nexport default Pages;\n","export const LOGIN_PATH = '/login';\nexport const PROFILE_PATH = '/';\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ExitButton.module.scss';\n\nconst ExitButton = ({ name, ...props }) => (\n  <button className={styles.button} {...props}>\n    {name}\n  </button>\n);\n\nExitButton.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default memo(ExitButton);\n","import React, { useContext } from 'react';\n\nimport ExitButton from '../Buttons/ExitButton';\n\nimport { AuthContext } from '../../contexts/auth';\n\nimport styles from './Header.module.scss';\n\nconst Header = () => {\n  const { logout } = useContext(AuthContext);\n\n  return (\n    <div className={styles.header}>\n      <ExitButton onClick={logout} name=\"Logout\" />\n    </div>\n  );\n};\nexport default Header;\n","import React, { useContext } from 'react';\n\nimport { AuthContext } from './contexts/auth';\n\nimport Pages from './pages';\nimport Header from './components/Header';\n\nconst App = () => {\n  const { loggedIn } = useContext(AuthContext);\n\n  return (\n    <div className=\"container\">\n      {loggedIn && <Header />}\n      <Pages loggedIn={loggedIn} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './app';\nimport { AuthProvider } from './contexts/auth';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import React, {\n  useMemo, useCallback, useState, createContext,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport api from '../api';\n\nexport const AuthContext = createContext();\n\nexport const { Consumer: AuthConsumer } = AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  const [loggedIn, setLoggedIn] = useState(() => api.isLoggedIn());\n\n  const login = useCallback(async (email, password) => {\n    await api.login(email, password);\n\n    setLoggedIn(true);\n  }, []);\n\n  const logout = useCallback(async () => {\n    await api.logout();\n\n    setLoggedIn(false);\n  }, []);\n\n  const contextValue = useMemo(() => ({ login, logout, loggedIn }), [loggedIn]);\n\n  return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>;\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.element,\n  ]).isRequired,\n};\n"],"sourceRoot":""}