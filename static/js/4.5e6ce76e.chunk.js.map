{"version":3,"sources":["components/Input/index.jsx","components/Buttons/Button/index.jsx","components/LoginForm/index.jsx","pages/LoginPage/index.jsx","components/PageTitle/index.jsx","components/PageTitle/PageTitle.module.scss","components/Input/Input.module.scss","components/Buttons/Button/Button.module.scss","components/LoginForm/LoginForm.module.scss"],"names":["Input","id","label","error","props","className","styles","container","htmlFor","cn","input","errored","defaultProps","memo","name","button","LoginForm","login","useContext","AuthContext","useState","isLoading","setLoading","loginError","setLoginError","validationSchema","Yup","email","required","password","onSubmit","a","message","initialValues","validateOnChange","values","handleChange","errors","form","placeholder","value","onChange","type","disabled","formError","LoginPage","PageTitle","children","pageTitle","module","exports"],"mappings":"uPAKMA,EAAQ,SAAC,GAAD,IACZC,EADY,EACZA,GAAIC,EADQ,EACRA,MAAOC,EADC,EACDA,MAAUC,EADT,6CAGZ,yBAAKC,UAAWC,IAAOC,WACpBL,GAAS,2BAAOM,QAASP,EAAII,UAAWC,IAAOJ,OAAQA,GACxD,yCAAOD,GAAIA,GAAQG,EAAnB,CAA0BC,UAAWI,IAAGH,IAAOI,MAAR,eAAkBJ,IAAOK,QAAUR,OAEtEA,GAAS,0BAAME,UAAWC,IAAOH,OAAQA,KAWjDH,EAAMY,aAAe,CACnBX,GAAI,GACJC,MAAO,GACPC,MAAO,IAGMU,qBAAKb,G,iBCjBLa,kBARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAASV,EAAZ,+BACb,4CAAYA,EAAZ,CAAmBC,UAAWC,IAAOS,SAASD,M,wBC0EjCE,EApEG,WAAO,IACfC,EAAUC,qBAAWC,KAArBF,MADc,EAGUG,oBAAS,GAHnB,mBAGfC,EAHe,KAGJC,EAHI,OAIcF,mBAAS,MAJvB,mBAIfG,EAJe,KAIHC,EAJG,KAWhBC,EAAmBC,IAAW,CAClCC,MAAOD,MAAaC,MAAM,oBAAoBC,SAAS,qBACvDC,SAAUH,MAAaE,SAAS,0BAG5BE,EAAQ,uCAAG,WAAOH,EAAOE,GAAd,SAAAE,EAAA,6DACfT,GAAW,GADI,kBAIPL,EAAMU,EAAOE,GAJN,uDAMbL,EAAc,KAAIQ,SAElBV,GAAW,GARE,yDAAH,wDAYd,OACE,oCACE,kBAAC,IAAD,CACEW,cAzBgB,CACpBN,MAAO,GACPE,SAAU,IAwBNJ,iBAAkBA,EAClBK,SAAU,gBAAGH,EAAH,EAAGA,MAAOE,EAAV,EAAUA,SAAV,OAAyBC,EAASH,EAAOE,IACnDK,kBAAkB,IAEjB,gBACCC,EADD,EACCA,OAAQC,EADT,EACSA,aAAcC,EADvB,EACuBA,OADvB,OAGC,kBAAC,IAAD,CAAMhC,UAAWC,IAAOgC,MACtB,kBAAC,EAAD,CACExB,KAAK,QACLb,GAAG,QACHC,MAAM,QACNqC,YAAY,QACZC,MAAOL,EAAOR,MACdc,SAAUL,EACVjC,MAAOkC,EAAOV,QAEhB,kBAAC,EAAD,CACEb,KAAK,WACLb,GAAG,WACHC,MAAM,WACNqC,YAAY,WACZG,KAAK,WACLF,MAAOL,EAAON,SACdY,SAAUL,EACVjC,MAAOkC,EAAOR,WAEhB,kBAAC,EAAD,CAAQf,KAAK,SAAS4B,KAAK,SAASC,SAAUtB,IAC7CE,GAAc,yBAAKlB,UAAWC,IAAOsC,WAAYrB,SC5D/CsB,UAPG,kBAChB,oCACE,kBAACC,EAAA,EAAD,mBACA,kBAAC,EAAD,S,gCCPJ,qCAIMA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,wBAAI1C,UAAWC,IAAO0C,WACnBD,IAWLD,EAAUlC,aAAe,CACvBmC,SAAU,MAGGlC,mBAAKiC,I,mBCpBpBG,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,MAAQ,qBAAqB,QAAU,uBAAuB,MAAQ,uB,mBCA1JD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,UAAY","file":"static/js/4.5e6ce76e.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport styles from './Input.module.scss';\n\nconst Input = ({\n  id, label, error, ...props\n}) => (\n  <div className={styles.container}>\n    {label && <label htmlFor={id} className={styles.label}>{label}</label>}\n    <input id={id} {...props} className={cn(styles.input, { [styles.errored]: error })} />\n    {\n        error && <span className={styles.error}>{error}</span>\n      }\n  </div>\n);\n\nInput.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  error: PropTypes.string,\n};\n\nInput.defaultProps = {\n  id: '',\n  label: '',\n  error: '',\n};\n\nexport default memo(Input);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.scss';\n\nconst Button = ({ name, ...props }) => (\n  <button {...props} className={styles.button}>{name}</button>\n);\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default memo(Button);\n","import React, { useContext, useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport Input from '../Input';\nimport Button from '../Buttons/Button';\n\nimport { AuthContext } from '../../contexts/auth';\n\nimport styles from './LoginForm.module.scss';\n\nconst LoginForm = () => {\n  const { login } = useContext(AuthContext);\n\n  const [isLoading, setLoading] = useState(false);\n  const [loginError, setLoginError] = useState(null);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required'),\n  });\n\n  const onSubmit = async (email, password) => {\n    setLoading(true);\n\n    try {\n      await login(email, password);\n    } catch (err) {\n      setLoginError(err.message);\n\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={({ email, password }) => onSubmit(email, password)}\n        validateOnChange={false}\n      >\n        {({\n          values, handleChange, errors,\n        }) => (\n          <Form className={styles.form}>\n            <Input\n              name=\"email\"\n              id=\"email\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              value={values.email}\n              onChange={handleChange}\n              error={errors.email}\n            />\n            <Input\n              name=\"password\"\n              id=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              error={errors.password}\n            />\n            <Button name=\"submit\" type=\"submit\" disabled={isLoading} />\n            {loginError && <div className={styles.formError}>{loginError}</div>}\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport PageTitle from '../../components/PageTitle';\nimport LoginForm from '../../components/LoginForm';\n\nconst LoginPage = () => (\n  <>\n    <PageTitle>Login Page</PageTitle>\n    <LoginForm />\n  </>\n);\n\nexport default LoginPage;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './PageTitle.module.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className={styles.pageTitle}>\n    {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n};\n\nPageTitle.defaultProps = {\n  children: null,\n};\n\nexport default memo(PageTitle);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageTitle\":\"PageTitle_pageTitle__1pQxc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__28HGz\",\"label\":\"Input_label__3KCFf\",\"input\":\"Input_input__g-ip-\",\"errored\":\"Input_errored__2N5_A\",\"error\":\"Input_error__ZY2Xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__35Uxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__1gZMu\",\"formError\":\"LoginForm_formError__3eqpv\"};"],"sourceRoot":""}